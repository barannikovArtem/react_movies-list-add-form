{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FormInput/FormInput.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","FormInput","memo","value","placeholder","error","isChange","isError","validationError","type","classNames","onChange","event","target","NewMovie","addMovie","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","titleError","setTitleError","imdbUrlError","setImdbUrlError","imdbIdError","setImdbIdError","imgUrlValidationError","setImgUrlValidationError","imdbUrllValidationError","setImdbUrlValidationError","reset","useCallback","urlPatternValidation","el","RegExp","test","shouldFormSubmit","filter","field","length","formHasAnError","onSubmit","preventDefault","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75550467.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { memo } from 'react';\nimport './FormInput.scss';\nimport classNames from 'classnames';\n\ninterface Props {\n  value: string,\n  placeholder: string,\n  isChange: (el: string) => void,\n  isError?: (el: boolean) => void,\n  error?: boolean,\n  validationError?: boolean,\n}\n\nexport const FormInput: React.FC<Props> = memo(({\n  value,\n  placeholder,\n  error,\n  isChange,\n  isError,\n  validationError,\n}) => {\n  return (\n    <div className=\"movie-form__item\">\n      <label className=\"movie-form__label\">\n        <input\n          type=\"text\"\n          value={value}\n          placeholder={placeholder}\n          className={classNames(\n            'movie-form__input',\n            { 'movie-form__input--error': error },\n          )}\n          onChange={event => {\n            isChange(event.target.value);\n            if (isError) {\n              isError(false);\n            }\n          }}\n        />\n\n        {error && <p className=\"movie-form__error\">This field is required</p>}\n        {!error && validationError\n        && <p className=\"movie-form__error\">This field has Validation Error</p>}\n      </label>\n    </div>\n  );\n});\n","import React, { FormEvent, useCallback, useState } from 'react';\nimport classNames from 'classnames';\nimport { FormInput } from '../FormInput';\nimport './NewMovie.scss';\n\ntype Props = {\n  addMovie: (movie:Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [titleError, setTitleError] = useState(false);\n  const [imdbUrlError, setImdbUrlError] = useState(false);\n  const [imdbIdError, setImdbIdError] = useState(false);\n  const [imgUrlValidationError, setImgUrlValidationError] = useState(false);\n  const [imdbUrllValidationError, setImdbUrlValidationError] = useState(false);\n\n  const reset = useCallback(() => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  }, []);\n\n  const urlPatternValidation = (el: string) => {\n    const regex\n    = new RegExp('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?');\n\n    return regex.test(el);\n  };\n\n  const shouldFormSubmit = [title, imdbUrl, imdbId]\n    .filter(field => field).length === 3;\n\n  const formHasAnError = imgUrlValidationError === true\n    || imdbUrllValidationError === true;\n\n  const isVisibleErrors = () => {\n    setTitleError(!title);\n    setImdbUrlError(!imdbUrl);\n    setImdbIdError(!imdbId);\n    if (imgUrl) {\n      setImgUrlValidationError(!urlPatternValidation(imgUrl));\n    }\n\n    setImdbUrlValidationError(!urlPatternValidation(imdbUrl));\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    isVisibleErrors();\n\n    if (!shouldFormSubmit || formHasAnError) {\n      return;\n    }\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    addMovie(newMovie);\n    reset();\n  };\n\n  return (\n    <form\n      className=\"movie-form\"\n      onSubmit={handleSubmit}\n    >\n      <h2\n        className=\"movie-form__title\"\n      >\n        Add new movie\n      </h2>\n      <FormInput\n        value={title}\n        placeholder=\"Enter a title\"\n        isChange={setTitle}\n        error={titleError}\n        isError={setTitleError}\n      />\n      <FormInput\n        value={description}\n        placeholder=\"Enter a description\"\n        isChange={setDescription}\n      />\n      <FormInput\n        value={imgUrl}\n        placeholder=\"Enter a imgUrl\"\n        isChange={setImgUrl}\n        validationError={imgUrlValidationError}\n      />\n      <FormInput\n        value={imdbUrl}\n        placeholder=\"Enter a imdbUrl\"\n        isChange={setImdbUrl}\n        error={imdbUrlError}\n        isError={setImdbUrlError}\n        validationError={imdbUrllValidationError}\n      />\n      <FormInput\n        value={imdbId}\n        placeholder=\"Enter a imdbId\"\n        isChange={setImdbId}\n        error={imdbIdError}\n        isError={setImdbIdError}\n      />\n      <button\n        type=\"submit\"\n        className={classNames(\n          'movie-form__submit-btn',\n        )}\n      >\n        Add new movie\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC<{}> = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}